1、使用Mysql：

1) no module named MySQLdb:
* 安装mysql-python会报错：no module named ConfigParser
* 因为Python3 已经将包名改成configparser，所以推荐安装 pymysql[或mysqlclient]
使用pymysql需要在项目的__init__.py中添加：
import pymysql
pymysql.install_as_MySQLdb()

2) MySQL Strict Mode
WARNINGS:
?: (mysql.W002) MySQL Strict Mode is not set for database connection 'default'
	HINT: MySQL's Strict Mode fixes many data integrity problems in MySQL, 
    such as data truncation upon insertion, by escalating warnings into errors. 
    It is strongly recommended you activate it. 
    See: https://docs.djangoproject.com/en/2.0/ref/databases/#mysql-sql-mode
database的配置中加上OPTIONS选项，如下所示：
'PORT': '3306',
'OPTIONS': {
    'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
    'autocommit': True,
}  


2、新建APP
1)、如果需要将多个APP放到同一文件夹，startapp时进入到文件夹在使用
mysite/apps/
cd apps
../manage.py startapp yourapp


3、VSCode Pylint经常报错，无法正常导包
VSCode设置中添加：
"python.linting.pylintArgs": ["--load-plugins", "pylint_django",],


4、Exception Type: TemplateDoesNotExist
在setting中需要增加自定义templates文件夹路径：
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],    #自定义路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


5、设置静态文件访问路径：
# setting.py
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)


6、配置静态文件的url
# urls.py
urlpatterns = [
    path('', TemplateView.as_view(template_name='index.html'),name='index'),
]